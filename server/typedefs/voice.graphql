enum DataTypes { string, number }

type VoiceCommand {
    type: String
    payload: String
}

type ResponseData {
    name: String
    type: DataTypes
    value: String
}

type InstructionResponse {
    responseId: String!
    success: Boolean
    data: ResponseData
}

input ResponseConfig {
    waitFor: Boolean = false
    expectedType: DataTypes = string
    expectedValueName: String = "data"
}

input Instruction {
    say: String!
    response: ResponseConfig
}

extend type Subscription {
    voiceEvents: VoiceCommand
    voiceInstruction(instruction: Instruction!): InstructionResponse!
}